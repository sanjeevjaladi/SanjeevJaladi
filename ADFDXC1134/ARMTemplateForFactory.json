{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "ADFDXC1134"
		},
		"LS_ADLS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_ADLS'"
		},
		"LS_ASQL_ABC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_ABC'"
		},
		"LS_ASQL_DXC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL_DXC'"
		},
		"LS_BLOB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB'"
		},
		"LS_FS_Tran_EMP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_FS_Tran_EMP'"
		},
		"LS_File_Share_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_File_Share'"
		},
		"LS_adls_emp_train_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'LS_adls_emp_train'"
		},
		"LS_fs_emp_train_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_fs_emp_train'"
		},
		"DS_ADLS_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().FilePath"
		},
		"DS_ADLS_EMP_Train_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Emp_new_full.csv"
		},
		"DS_ADLS_EMP_Train_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().Tar_Path"
		},
		"DS_ADLS_File_Name_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().File_Name"
		},
		"DS_ADLS_File_Name_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().File_Path"
		},
		"DS_ADLS_From_To_DateTime_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().FilePath"
		},
		"DS_BLOB_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().File_Name"
		},
		"DS_BLOB_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().File_Path"
		},
		"DS_FS_emp_train_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().File_Path"
		},
		"DS_FileShare_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().Path"
		},
		"DS_FileShare_FileName_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().FileNames"
		},
		"DS_FileShare_FileName_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().FilePath"
		},
		"LS_ADLS_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://adlsdxc1134.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_ADLS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "fca6896e-ee6a-4875-898a-e17f21fd7b90"
		},
		"LS_ADLS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "93f33571-550f-43cf-b09f-cd331338d086"
		},
		"LS_ADLS_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "aa9d0e6b-d25e-4e3b-94b3-3c71c403c9e7"
		},
		"LS_ADLS_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RGDXC1134"
		},
		"LS_FS_Tran_EMP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\File_Share"
		},
		"LS_FS_Tran_EMP_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "sjaladi3@dxc.com"
		},
		"LS_File_Share_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\File_Share"
		},
		"LS_File_Share_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "sjaladi3@dxc.com"
		},
		"LS_adls_emp_train_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://adlsdxc1134.azuredatalakestore.net/webhdfs/v1"
		},
		"LS_adls_emp_train_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "fca6896e-ee6a-4875-898a-e17f21fd7b90"
		},
		"LS_adls_emp_train_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "93f33571-550f-43cf-b09f-cd331338d086"
		},
		"LS_adls_emp_train_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "aa9d0e6b-d25e-4e3b-94b3-3c71c403c9e7"
		},
		"LS_adls_emp_train_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RGDXC1134"
		},
		"LS_fs_emp_train_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\File_Share"
		},
		"LS_fs_emp_train_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "sjaladi3@dxc.com"
		},
		"trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_Source_Container": {
			"type": "string",
			"defaultValue": "t7dwsource"
		},
		"trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_Target_Container": {
			"type": "string",
			"defaultValue": "trigger"
		},
		"trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_File": {
			"type": "string",
			"defaultValue": "Emp.csv"
		},
		"trigger_Based_BLOB_FILE_CREATE_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/aa9d0e6b-d25e-4e3b-94b3-3c71c403c9e7/resourceGroups/RGDXC1134/providers/Microsoft.Storage/storageAccounts/blobdxc1134"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Cyc_Close')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cyc_Close",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_CYC_END_NEW]",
							"storedProcedureParameters": {
								"CYC_SK": {
									"value": {
										"value": "@pipeline().parameters.CYC_SK",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"CYC_SK": {
						"type": "Int"
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cyc_Start')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cyc_Start",
						"description": "",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_CYC_START_NEW]",
							"storedProcedureParameters": {
								"CYC_SK": {
									"value": {
										"value": "@pipeline().parameters.CYC_SK",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"FORCE_IND": {
									"value": {
										"value": "@pipeline().parameters.FORCE_IND",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"CYC_SK": {
						"type": "Int"
					},
					"FORCE_IND": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_End')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Job_End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_JOB_END_NEW]",
							"storedProcedureParameters": {
								"DATA_READ": {
									"value": {
										"value": "@pipeline().parameters.DATA_READ",
										"type": "Expression"
									},
									"type": "String"
								},
								"DATA_WRITTEN": {
									"value": {
										"value": "@pipeline().parameters.DATA_WRITTEN",
										"type": "Expression"
									},
									"type": "String"
								},
								"ERR_MSG": {
									"value": {
										"value": "@pipeline().parameters.ERR_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"JOB_SK": {
									"value": {
										"value": "@pipeline().parameters.JOB_SK",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ROWS_LOADED": {
									"value": {
										"value": "@pipeline().parameters.ROWS_LOADED",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ROWS_READ": {
									"value": {
										"value": "@pipeline().parameters.ROWS_READ",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"STATUS": {
									"value": {
										"value": "@pipeline().parameters.STATUS",
										"type": "Expression"
									},
									"type": "String"
								},
								"THROUGHPUT": {
									"value": {
										"value": "@coalesce(pipeline().parameters.THROUGHPUT,0)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"JOB_SK": {
						"type": "Int"
					},
					"STATUS": {
						"type": "String"
					},
					"DATA_READ": {
						"type": "String"
					},
					"DATA_WRITTEN": {
						"type": "String"
					},
					"ROWS_READ": {
						"type": "String"
					},
					"ROWS_LOADED": {
						"type": "String"
					},
					"ERR_MSG": {
						"type": "String"
					},
					"ABC_SCHEM": {
						"type": "String"
					},
					"THROUGHPUT": {
						"type": "Float",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Job_Start')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Job_Start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_JOB_START_NEW]",
							"storedProcedureParameters": {
								"JOB_SK": {
									"value": {
										"value": "@pipeline().parameters.JOB_SK",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"PL_RUN_ID": {
									"value": {
										"value": "@pipeline().parameters.PL_RUN_ID",
										"type": "Expression"
									},
									"type": "String"
								},
								"STEP_SK": {
									"value": {
										"value": "@pipeline().parameters.STEP_SK",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"JOB_SK": {
						"type": "Int"
					},
					"PL_RUN_ID": {
						"type": "String"
					},
					"STEP_SK": {
						"type": "Int"
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Multiple_Tables_To_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_All_Files_From_Source_Table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_NAME, LAST_UPDATED_COLUMN FROM  RD.SOURCE_TABLE_INFO WHERE IS_ACTIVE = 1"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate_For_Each_Source_Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_All_Files_From_Source_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_All_Files_From_Source_Table').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get_Min_Max_Dates",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select  MIN(@{item().LAST_UPDATED_COLUMN}) MIN_DATE, MAX(@{item().LAST_UPDATED_COLUMN})  MAX_DATE from @{item().TABLE_NAME}",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DS_SQL_DXC",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Get_Table_Name_From_Updates",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select Count(TABLE_NAME) TABLE_NAME from RD.LAST_UPDATES_INFO  WHERE  TABLE_NAME = '@{item().TABLE_NAME}' ",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DS_SQL_DXC",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Check_For_File_In_Update",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_Table_Name_From_Updates",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Get_Min_Max_Dates",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Get_Table_Name_From_Updates').output.firstRow.TABLE_NAME , 0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Insert_New_Tabels",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[rd].[SP_INS_LAST_UPDATES_INFO]",
													"storedProcedureParameters": {
														"AUDIT_DTTM": {
															"value": {
																"value": "@activity('Get_Min_Max_Dates').output.firstRow.MIN_DATE",
																"type": "Expression"
															},
															"type": "String"
														},
														"TABLE_NAME": {
															"value": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_DXC",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get_Count_Between_Min_Max",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get_Last_Modified_Date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT COUNT(*) RCOUNT FROM @{item().TABLE_NAME} WHERE \n\n@{item().LAST_UPDATED_COLUMN} > '@{activity('Get_Last_Modified_Date').output.firstRow.AUDIT_DTTM}' AND @{item().LAST_UPDATED_COLUMN}  <= '@{activity('Get_Min_Max_Dates').output.firstRow.MAX_DATE}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DS_SQL_DXC",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Check_For_New_Records",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_Count_Between_Min_Max",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get_Count_Between_Min_Max').output.firstRow.RCOUNT, 0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Move_Records",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().TABLE_NAME} WHERE \n@{item().LAST_UPDATED_COLUMN} > '@{activity('Get_Last_Modified_Date').output.firstRow.AUDIT_DTTM}' AND @{item().LAST_UPDATED_COLUMN}  <= '@{activity('Get_Min_Max_Dates').output.firstRow.MAX_DATE}'",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureDataLakeStoreWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_SQL_DXC",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_File_Name",
														"type": "DatasetReference",
														"parameters": {
															"File_Name": {
																"value": "@concat(item().TABLE_NAME, '_', addhours(utcnow(), -1, 'dd'), '_' , addhours(utcnow(), -1, 'MM'), '_' , addhours(utcnow(), -1, 'yyyy'), '_', addhours(utcnow(), -1, 'HH'), '_' , addhours(utcnow(), -1, 'mm'), '_' , addhours(utcnow(), -1, 'ss') )",
																"type": "Expression"
															},
															"File_Path": {
																"value": "@concat('Tables_Date', '\\', item().TABLE_NAME)",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Update_Last_Modify_Date",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move_Records",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[rd].[SP_LAST_UPDATES_INFO]",
													"storedProcedureParameters": {
														"AUDIT_DTTM": {
															"value": {
																"value": "@{activity('Get_Min_Max_Dates').output.firstRow.MAX_DATE}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"TABLE_NAME": {
															"value": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL_DXC",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get_Last_Modified_Date",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Check_For_File_In_Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT AUDIT_DTTM FROM RD.LAST_UPDATES_INFO WHERE TABLE_NAME = '@{item().TABLE_NAME}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DS_SQL_DXC",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "R&D"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_File_Name')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Multiple_File_Watcher')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_For_Files",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(length(variables('V_File_Name_1')),1), equals(length(variables('V_File_Name_2')),1) )",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_File_Names",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "Source\\Sample_Files",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										]
									}
								},
								{
									"name": "Check_For_File_1",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get_File_Names",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get_File_Names').output.Childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'ACK_File_1_Something.txt')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check_For_File_2",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get_File_Names",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get_File_Names').output.Childitems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'ACK_File_1_SomethingElse.txt')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "File_Name_1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check_For_File_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_File_Name_1",
										"value": {
											"value": "@activity('Check_For_File_1').output.Value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "File_Name_2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check_For_File_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_File_Name_2",
										"value": {
											"value": "@activity('Check_For_File_2').output.Value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Name_1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "File_Name_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(length(variables('V_File_Name_1')),1), equals(length(variables('V_File_Name_2')),1) )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait_For_Files",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 30
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Call_Pipeline",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_For_Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(length(variables('V_File_Name_1')),1), equals(length(variables('V_File_Name_2')),1) )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_Files",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Call_Next_Pipeline",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Check_For_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"variables": {
					"V_File_Name_2": {
						"type": "Array"
					},
					"V_File_Name_1": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "FIle Watcher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Single_File_Watcher')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_For_File",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check_For_File_Exist').output.Exists",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check_For_File_Exist",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_ADLS_File_Name",
											"type": "DatasetReference",
											"parameters": {
												"File_Name": {
													"value": "@pipeline().parameters.File_Name",
													"type": "Expression"
												},
												"File_Path": {
													"value": "@pipeline().parameters.File_Path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "No_Files_Waite",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Check_For_File_Exist",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "IfCondition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_For_File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check_For_File_Exist').output.Exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_File",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Call_Next_Pipeline",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Check_For_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"File_Name": {
						"type": "string",
						"defaultValue": "ACK_File_1_Something.txt"
					},
					"File_Path": {
						"type": "string",
						"defaultValue": "Source\\Sample_Files"
					}
				},
				"folder": {
					"name": "FIle Watcher"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_File_Name')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP-L22_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_For_ACK_File",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Get_Current_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Processed_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_ACK_File_Name').output.Exists",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_ACK_File_Name",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@pipeline().parameters.File_Path",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@variables('V_CurrentDateTime')",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@concat('SAP_L22_ZPInfo_', addhours(utcnow(), -0, 'yyyy'), '-', addhours(utcnow(), -0, 'MM'), '-', addhours(utcnow(), -0, 'dd'), '.ack')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "IfCondition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_ACK_File_Name').output.Exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_File",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Get_Current_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Last_Processed_TimeStamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LastRunTime-100 LastModifiedDateTime from LastRunTimeStmp WHERE SourceName = 'SAP-L22' "
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get_Source_File_Names",
						"description": "",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.File_Path",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Iterate_For_Each_FIle",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Source_File_Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Source_File_Names').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check_For_File_Names",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(\nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_', substring(item().name, sub(length(item().name), 18), 10), '.csv.zip')), \nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_meldekz_', substring(item().name, sub(length(item().name), 18), 10), '.csv.zip'))\n)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "FileSystemSource",
														"recursive": true
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureDataLakeStoreWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_FileShare_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@pipeline().parameters.File_Path",
																"type": "Expression"
															},
															"FromDateTime": {
																"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
																"type": "Expression"
															},
															"ToDateTime": {
																"value": "@variables('V_CurrentDateTime')",
																"type": "Expression"
															},
															"FileNames": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@concat('Daimler/SAP/SAP-L22/', replace(substring(item().name, sub(length(item().name), 18), 10), '-', '/'),'/')",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Store_Current_TimeStamp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Iterate_For_Each_FIle",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UPDATELASTRUNTIME]",
							"storedProcedureParameters": {
								"LastRunTime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceName": {
									"value": {
										"value": "SAP-L22",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"File_Path": {
						"type": "string",
						"defaultValue": "Source/SAP-L22"
					}
				},
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP-L22_PL_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_For_ACK_File",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_ACK_File_Name').output.Exists",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_ACK_File_Name",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_File_Share_File_Name",
											"type": "DatasetReference",
											"parameters": {
												"File_Name": {
													"value": "@pipeline().parameters.File_Name",
													"type": "Expression"
												},
												"File_Path": {
													"value": "@pipeline().parameters.File_Path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "No_Files_Wait",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Get_ACK_File_Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "IfCondition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_ACK_File_Name').output.Exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_File",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Get_Current_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Last_Processed_TimeStamp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LZRunTime-1 LastModifiedDateTime from SAP_LZ_Runtime"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get_Source_File_Names",
						"description": "",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get_Current_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Processed_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.File_Path",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Iterate_For_Each_FIle",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Source_File_Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Source_File_Names').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check_For_File_Names",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(\nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_', addhours(utcnow(), -0, 'yyyy') , '-' , addhours(utcnow(), -0, 'MM'), '.csv.gz')), \nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_', addhours(utcnow(), -0, 'yyyy') , '-' ,adddays(utcnow(),  mul(int(addhours(utcnow(), -0, 'dd')),-1), 'MM'), '.csv.gz'))\n)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "FileSystemSource",
														"recursive": true
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureDataLakeStoreWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_FileShare_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@pipeline().parameters.File_Path",
																"type": "Expression"
															},
															"FromDateTime": {
																"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
																"type": "Expression"
															},
															"ToDateTime": {
																"value": "@variables('V_CurrentDateTime')",
																"type": "Expression"
															},
															"FileNames": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@concat('Daimler/SAP/SAP-L22/', addhours(utcnow(), -0, 'yyyy'), '/', addhours(utcnow(), -0, 'MM'), '/', addhours(utcnow(), -0, 'dd'))",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Store_Current_TimeStamp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Iterate_For_Each_FIle",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SAP_Update_LZ_RunTime]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"File_Name": {
						"type": "string",
						"defaultValue": "SAP_L22_ZPInfo_2019-06.ack"
					},
					"File_Path": {
						"type": "string",
						"defaultValue": "Source/SAP-L22"
					}
				},
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_File_Share_File_Name')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP-L22_PL_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Iterate_For_Each_File",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy_From_File_Share_To_LZ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@pipeline().parameters.FilePath",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@pipeline().parameters.FromDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@pipeline().parameters.ToDateTime",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/SAP-L22/', addhours(utcnow(), -0, 'yyyy'), '/', addhours(utcnow(), -0, 'MM'), '/', addhours(utcnow(), -0, 'dd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP-L22_Test_IMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get_Current_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Processed_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "Source\\SAP-L22",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('Get_Current_TimeStamp')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "All_Files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetMetadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ALL_FIles_Names",
							"value": {
								"value": "@activity('GetMetadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "All_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(variables('Item_Count')), length(variables('ALL_FIles_Names')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "File_Names",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FIle_Name",
										"value": {
											"value": "@variables('All_Files_Names')[int(variables('Inc_Value'))].name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Inc_Counter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Counter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Item_Count",
										"value": {
											"value": "@string(add(int(variables('Inc_Value')), 1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check_Inc_Value",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Names",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(and(startswith(variables('FIle_Name'), 'SAP_L22_ZPInfo_'), endswith(variables('FIle_Name'), '.ack')), equals(length(variables('FIle_Name')), 29))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Append Variable1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ACK_File_Names",
													"value": {
														"value": "@variables('FIle_Name')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Counter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "File_Names",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Inc_Value",
										"value": {
											"value": "@variables('Item_Count')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:10:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(length(variables('ACK_File_Names')), 1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_File",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Get_Current_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get_Current_TimeStamp",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Last_Processed_TimeStamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LastRunTime-100 LastModifiedDateTime from LastRunTimeStmp WHERE SourceName = 'SAP-L22' "
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"ALL_FIles_Names": {
						"type": "Array"
					},
					"FIle_Name": {
						"type": "String"
					},
					"Inc_Value": {
						"type": "String",
						"defaultValue": "0"
					},
					"Item_Count": {
						"type": "String",
						"defaultValue": "0"
					},
					"ACK_File_Names": {
						"type": "Array"
					},
					"Get_Current_TimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_FS_LZ_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetCurrentDateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetCurrentDateTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EachFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SAP_Update_LZ_RunTime]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLastProcessedDateTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LZRunTime-16 LastModifiedDateTime from SAP_LZ_Runtime"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetSAPFiles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GetLastProcessedDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetCurrentDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "SAP",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "EachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSAPFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSAPFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetVariable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_PlantNo",
										"value": {
											"value": "@if(startswith(split(item().name, '_')[1], 'MOV') , \nconcat(substring(split(item().name, '_')[1], 0 , 3), '_', split(item().name, '_')[2]) , \nconcat(split(item().name, '_')[1], '_', split(item().name, '_')[3])) ",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetVariable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "SAP",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@variables('V_CurrentDateTime')",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/Landing/', variables('V_PlantNo'), '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					},
					"V_PlantNo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_FS_LZ_PL1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetCurrentDateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetCurrentDateTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EachFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SAP_Update_LZ_RunTime]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLastProcessedDateTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LZRunTime-6 LastModifiedDateTime from SAP_LZ_Runtime"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetSAPFiles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GetLastProcessedDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetCurrentDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "SAP",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "EachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSAPFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSAPFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ExecuteSAP_FS_LZ_PL2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SAP_FS_LZ_PL2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FILENAME": {
												"value": "@item().name",
												"type": "Expression"
											},
											"FromDateTime": {
												"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
												"type": "Expression"
											},
											"ToDateTime": {
												"value": "@variables('V_CurrentDateTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/pipelines/SAP_FS_LZ_PL2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_FS_LZ_PL2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select FILENAME, FILEPATH from SAP_FIles where FILENAME = substring( '@{pipeline().parameters.FILENAME}', 1, len(FILENAME))",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFilePath",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ForEachFile').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFilesFromFStoLZ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "SAP",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@pipeline().parameters.FromDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@pipeline().parameters.ToDateTime",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/Landing/', item().FILEPATH, '_010', '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"FILENAME": {
						"type": "string"
					},
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_FS_LZ_PL_FINAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetCurrentDateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetCurrentDateTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EachFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SAP_Update_LZ_RunTime]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLastProcessedDateTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LZRunTime-21 LastModifiedDateTime from SAP_LZ_Runtime"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetSAPFiles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "GetLastProcessedDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetCurrentDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "SAP",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "EachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetSAPFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSAPFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ExecutePipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SAP_FS_LZ_PL_FINAL2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TRANS_NO": {
												"value": "@split(item().name, '_')[1] ",
												"type": "Expression"
											},
											"FromDateTime": {
												"value": "@activity('GetLastProcessedDateTime').output.firstRow.LastModifiedDateTime",
												"type": "Expression"
											},
											"ToDateTime": {
												"value": "@variables('V_CurrentDateTime')",
												"type": "Expression"
											},
											"PLANT_NO": {
												"value": "@split(item().name, '_')[3]",
												"type": "Expression"
											},
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					},
					"V_PlantNo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/pipelines/SAP_FS_LZ_PL_FINAL2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_FS_LZ_PL_FINAL2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFile",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \nTRANS_NO, \nPLANT_NO, \nFOLDER_PATH\n FROM \nSAP_FOLDER_MAPPING\nWHERE \nTRANS_NO = '@{pipeline().parameters.TRANS_NO}' AND \nPLANT_NO = '@{pipeline().parameters.PLANT_NO}'",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFilePath",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ForEachFile').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFilesFromFStoLZ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "SAP",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@pipeline().parameters.FromDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@pipeline().parameters.ToDateTime",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/Landing/', item().FOLDER_PATH, '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.FILENAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TRANS_NO": {
						"type": "string"
					},
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					},
					"PLANT_NO": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_L22_Final_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get_Current_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Processed_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.File_Path",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('Get_Current_TimeStamp')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Get_Current_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get_Current_TimeStamp",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Last_Processed_TimeStamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LastRunTime LastModifiedDateTime from LastRunTimeStmp WHERE SourceName = 'SAP-L22' "
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadata1').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(and(startswith(item().name, 'SAP_L22_ZPInfo_'), endswith(item().name, '.ack')), equals(length(item().name), 29))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SAP_L22_Final_2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SAP_L22_Final_2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"From_Date": {
												"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
												"type": "Expression"
											},
											"To_Date": {
												"value": "@variables('Get_Current_TimeStamp')",
												"type": "Expression"
											},
											"ACK_File_Date": {
												"value": "@substring(item().name, sub(length(item().name), 14), 10)",
												"type": "Expression"
											},
											"FIle_Path": {
												"value": "@pipeline().parameters.File_Path",
												"type": "Expression"
											},
											"ACK_File_Name": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(length(activity('Filter1').output.value), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "NO_ACK_FILES",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "SqlServerStoredProcedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UPDATELASTRUNTIME]",
							"storedProcedureParameters": {
								"LastRunTime": {
									"value": {
										"value": "@variables('Get_Current_TimeStamp')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceName": {
									"value": {
										"value": "SAP-L22",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"File_Path": {
						"type": "string",
						"defaultValue": "Source\\SAP-L22"
					}
				},
				"variables": {
					"Get_Current_TimeStamp": {
						"type": "String"
					},
					"ACK_FILES_COUNT": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/pipelines/SAP_L22_Final_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_L22_Final_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.FIle_Path",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@pipeline().parameters.From_Date",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@pipeline().parameters.To_Date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@or(equals(item().name, concat('SAP_L22_ZPInfo_',pipeline().parameters.ACK_File_Date, '.csv.zip')), \nequals(item().name, concat('SAP_L22_ZPInfo_meldekz_',pipeline().parameters.ACK_File_Date, '.csv.zip')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FileShare_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@pipeline().parameters.File_Path",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@pipeline().parameters.From_Date",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@pipeline().parameters.To_Date",
													"type": "Expression"
												},
												"FileNames": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/SAP-L22/', replace(pipeline().parameters.ACK_File_Date, '-', '/'),'/')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"From_Date": {
						"type": "string"
					},
					"To_Date": {
						"type": "string"
					},
					"ACK_File_Date": {
						"type": "string"
					},
					"FIle_Path": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_LZ_DZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "Daimler/SAP/Landing/",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "Daimler/SAP/Target/"
								}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "Daimler/SAP/Landing",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"recursive": true
						}
					}
				],
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_LZ_DZ_PL1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFolder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFolderNames",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetCurrentDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetLastModifiedDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFolderNames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ExecuteSAP_FS_DZ_PL2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SAP_LZ_DZ_PL2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FILEPATH": {
												"value": "@item().FILEPATH",
												"type": "Expression"
											},
											"CurrentDateTime": {
												"value": "@variables('V_CurrentDateTime')",
												"type": "Expression"
											},
											"LastModifiedDateTime": {
												"value": "@activity('GetLastModifiedDateTime').output.firstRow.LastModifiedDateTime",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GetFolderNames",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select FILENAME, FILEPATH from SAP_FIles "
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GetCurrentDateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetCurrentDateTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SAP_Update_DZ_RunTime]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLastModifiedDateTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DZRunTime-6 LastModifiedDateTime from SAP_DZ_Runtime"
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/pipelines/SAP_LZ_DZ_PL2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_LZ_DZ_PL2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileNames",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADLS_From_To_DateTime",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": {
										"value": "@concat('Daimler/SAP/Landing/', pipeline().parameters.FILEPATH, '_010', '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@pipeline().parameters.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@pipeline().parameters.CurrentDateTime",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileNames').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyLZtoDZ",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDataLakeStoreSource",
											"recursive": true
										},
										"sink": {
											"type": "AzureDataLakeStoreSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_From_To_DateTime",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/Landing/', pipeline().parameters.FILEPATH, '_010', '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@pipeline().parameters.LastModifiedDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@pipeline().parameters.CurrentDateTime",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Daimler/SAP/Target/', pipeline().parameters.FILEPATH, '_010', '/', addhours(utcnow(), -1, 'yyyy'), '/', addhours(utcnow(), -1, 'MM'), '/', addhours(utcnow(), -1, 'dd'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"FILEPATH": {
						"type": "string"
					},
					"CurrentDateTime": {
						"type": "string"
					},
					"LastModifiedDateTime": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_From_To_DateTime')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step_End')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Step_End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_STEP_END_NEW]",
							"storedProcedureParameters": {
								"STATUS": {
									"value": {
										"value": "@pipeline().parameters.STATUS",
										"type": "Expression"
									},
									"type": "String"
								},
								"STEP_SK": {
									"value": {
										"value": "@pipeline().parameters.STEP_SK",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"STEP_SK": {
						"type": "Int"
					},
					"STATUS": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step_Start')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Step_Start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ABC].[UPDATE_STEP_START_NEW]",
							"storedProcedureParameters": {
								"FORCE_IND": {
									"value": {
										"value": "@pipeline().parameters.FORCE_IND",
										"type": "Expression"
									},
									"type": "String"
								},
								"STEP_SK": {
									"value": {
										"value": "@pipeline().parameters.STEP_SK",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_ABC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"STEP_SK": {
						"type": "Int"
					},
					"FORCE_IND": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ABC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger Test TBD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TBD_Trigger_Test",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.Source_Container",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TBD_Trigger_Test",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.Target_Container",
										"type": "Expression"
									},
									"File": {
										"value": "@pipeline().parameters.File",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"Source_Container": {
						"type": "string",
						"defaultValue": "t7dwsource"
					},
					"Target_Container": {
						"type": "string",
						"defaultValue": "trigger"
					},
					"File": {
						"type": "string",
						"defaultValue": "Emp.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBD_Trigger_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETERECORDS]",
							"storedProcedureParameters": {
								"COLUMN_NAME": {
									"value": {
										"value": "@pipeline().parameters.COLUMN_NAME",
										"type": "Expression"
									},
									"type": "String"
								},
								"DATE_VALUE": {
									"value": {
										"value": "@pipeline().parameters.DATE_VALUE",
										"type": "Expression"
									},
									"type": "String"
								},
								"Table_Name": {
									"value": {
										"value": "@pipeline().parameters.TABLE_NAME",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  * FROM @{pipeline().parameters.TABLE_NAME} WHERE @{pipeline().parameters.COLUMN_NAME} >= '@{pipeline().parameters.DATE_VALUE}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_File_Name",
								"type": "DatasetReference",
								"parameters": {
									"File_Name": {
										"value": "@concat('Deleted_Records_', pipeline().parameters.DATE_VALUE)",
										"type": "Expression"
									},
									"File_Path": {
										"value": "@concat(pipeline().parameters.TABLE_NAME, '_', pipeline().parameters.DATE_VALUE)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"TABLE_NAME": {
						"type": "string",
						"defaultValue": "Date_TEST_TBD"
					},
					"DATE_VALUE": {
						"type": "string",
						"defaultValue": "2019-05-20"
					},
					"COLUMN_NAME": {
						"type": "string",
						"defaultValue": "AuditDate"
					}
				},
				"folder": {
					"name": "PT R&D"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_File_Name')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": "GetDatesFromFolder",
									"FromDateTime": {
										"value": "@adddays(utcnow(), -1)",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@adddays(utcnow(), 1)",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_GetDate",
										"value": {
											"value": "@substring(item().name, sub(length(item().name), 15), 8)",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"V_GetDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PT R&D"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get_ACK_File_Name').output.childItems, \nconcat('SAP_L22_ZPInfo_', addhours(utcnow(), -0, 'yyyy'), '-', addhours(utcnow(), -0, 'MM'), '-', addhours(utcnow(), -0, 'dd'), '.ack'))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_ACK_File_Name",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_FileShare",
											"type": "DatasetReference",
											"parameters": {
												"Path": {
													"value": "@pipeline().parameters.Source_Files_Path",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@adddays(utcnow(), -1)",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@adddays(utcnow(), 0)",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										]
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "Wait_TRUE",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait_TIME_OUT",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"Source_Files_Path": {
						"type": "string",
						"defaultValue": "C:\\File_Share\\Source\\SAP-L22"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_For_ACK_File",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Get_Current_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Processed_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(variables('Ack_FIles_Check'), 'ACK_FIle'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get_ACK_File_Name",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_FileShare",
											"type": "DatasetReference",
											"parameters": {
												"Path": {
													"value": "@pipeline().parameters.File_Path",
													"type": "Expression"
												},
												"FromDateTime": {
													"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
													"type": "Expression"
												},
												"ToDateTime": {
													"value": "@variables('V_CurrentDateTime')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										]
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_ACK_File_Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(startswith(activity('Get_ACK_File_Name').output.childItems, 'SAP_L22_ZPInfo_'), endswith(activity('Get_ACK_File_Name').output.childItems, '.ack'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set Variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Ack_FIles_Check",
													"value": "activity('Get_ACK_File_Name').output.childItems"
												}
											}
										]
									}
								}
							],
							"timeout": "00.00:01:00"
						}
					},
					{
						"name": "IfCondition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get_ACK_File_Name').output.Exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "No_ACK_File",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Get_Current_TimeStamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "V_CurrentDateTime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Last_Processed_TimeStamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LastRunTime-10 LastModifiedDateTime from LastRunTimeStmp WHERE SourceName = 'SAP-L22' "
							},
							"dataset": {
								"referenceName": "DS_SQL_DXC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get_Source_File_Names",
						"description": "",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Check_For_ACK_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.File_Path",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Iterate_For_Each_FIle",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Source_File_Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Source_File_Names').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check_For_File_Names",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(\nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_', substring(item().name, sub(length(item().name), 18), 10), '.csv.zip')), \nequals(\nitem().name, \nconcat('SAP_L22_ZPInfo_meldekz_', substring(item().name, sub(length(item().name), 18), 10), '.csv.zip'))\n)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "FileSystemSource",
														"recursive": true
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureDataLakeStoreWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_FileShare_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@pipeline().parameters.File_Path",
																"type": "Expression"
															},
															"FromDateTime": {
																"value": "@activity('Get_Last_Processed_TimeStamp').output.firstRow.LastModifiedDateTime",
																"type": "Expression"
															},
															"ToDateTime": {
																"value": "@variables('V_CurrentDateTime')",
																"type": "Expression"
															},
															"FileNames": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_ADLS_FileName",
														"type": "DatasetReference",
														"parameters": {
															"FilePath": {
																"value": "@concat('Daimler/SAP/SAP-L22/', replace(substring(item().name, sub(length(item().name), 18), 10), '-', '/'),'/')",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Store_Current_TimeStamp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Iterate_For_Each_FIle",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UPDATELASTRUNTIME]",
							"storedProcedureParameters": {
								"LastRunTime": {
									"value": {
										"value": "@variables('V_CurrentDateTime')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceName": {
									"value": {
										"value": "SAP-L22",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_DXC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"File_Path": {
						"type": "string",
						"defaultValue": "Source/SAP-L22"
					}
				},
				"variables": {
					"V_CurrentDateTime": {
						"type": "String"
					},
					"Ack_FIles_Check": {
						"type": "String",
						"defaultValue": "ACK_FIle"
					}
				},
				"folder": {
					"name": "SAP-L22"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileShare_FileName')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FileName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileShare",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "Source\\SAP-L22",
										"type": "Expression"
									},
									"FromDateTime": {
										"value": "@adddays(utcnow(), -10)",
										"type": "Expression"
									},
									"ToDateTime": {
										"value": "@utcnow()",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "All_Files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetMetadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ALL_FIles_Names",
							"value": {
								"value": "@activity('GetMetadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "All_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(and(startswith(variables('ALL_FIles_Names')[int(variables('Inc_Value'))].name, 'SAP_L22_ZPInfo_'), \nendswith(variables('ALL_FIles_Names')[int(variables('Inc_Value'))].name, '.ack') ), \nequals(length(variables('ALL_FIles_Names')[int(variables('Inc_Value'))].name), 29))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "File_Names",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "First_FIle_Name",
										"value": {
											"value": "@variables('All_Files_Names')[int(variables('Inc_Value'))].name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Inc_Counter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check_Inc_Value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Item_Count",
										"value": {
											"value": "@string(add(int(variables('Inc_Value')), 1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check_Inc_Value",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Names",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(int(variables('Item_Count')), length(variables('ALL_FIles_Names')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Counter",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Inc_Value",
													"value": {
														"value": "@variables('Item_Count')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Inc_Value_Set_0",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Inc_Value",
													"value": {
														"value": "0",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Item_Count_Set_0",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "Item_Count",
													"value": {
														"value": "0",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:01:00"
						}
					}
				],
				"variables": {
					"ALL_FIles_Names": {
						"type": "Array"
					},
					"First_FIle_Name": {
						"type": "String"
					},
					"Inc_Value": {
						"type": "String",
						"defaultValue": "0"
					},
					"Item_Count": {
						"type": "String",
						"defaultValue": "0"
					},
					"File_Len": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FS_emp_train",
								"type": "DatasetReference",
								"parameters": {
									"File_Path": {
										"value": "Example",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, '.ack')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(length(activity('Filter1').output.value), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Send_No_ACK_Email",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline8",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ACK_DATE": {
												"value": "@item().name",
												"type": "Expression"
											},
											"ACK_Date_Part": {
												"value": "@substring(item().name, 4,10)",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FS_emp_train')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FS_emp_train",
								"type": "DatasetReference",
								"parameters": {
									"File_Path": {
										"value": "Example",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name, '.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureDataLakeStoreSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_File_Share_File_Name",
											"type": "DatasetReference",
											"parameters": {
												"File_Name": {
													"value": "@item().name",
													"type": "Expression"
												},
												"File_Path": {
													"value": "Example",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@concat('Example/', replace(pipeline().parameters.ACK_DATE, '-', '/'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ACK_DATE": {
						"type": "string"
					},
					" ACK_Date_Part": {
						"type": "string"
					}
				},
				"variables": {
					"V_Test_Dte": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FS_emp_train')]",
				"[concat(variables('factoryId'), '/datasets/DS_File_Share_File_Name')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-36.eastus.logic.azure.com:443/workflows/47fb81a235eb42798a05499fc253c8f1/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=JX0dp_LH9Egr088clBjAAV-4gh4KwuHvaIXtcNQpL4Y",
							"method": "POST",
							"headers": {
								"Content-Type": {
									"value": "application/json",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\n\"BlobPath\":\"@{pipeline().parameters.BlobPath}\",\n\"EmailFrom\":\"@{pipeline().parameters.EmailFrom}\",\n\"EmailTo\":\"@{pipeline().parameters.EmailTo}\",\n\"SourceName\":\"@{pipeline().parameters.SourceName}\",\n\"Subject\":\"@{pipeline().parameters.Subject}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"BlobPath": {
						"type": "string",
						"defaultValue": "/empdatalogicapp/"
					},
					"EmailFrom": {
						"type": "string",
						"defaultValue": "sjaladi3@dxc.com"
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "sjaladi3@dxc.com"
					},
					"SourceName": {
						"type": "string",
						"defaultValue": "EMP"
					},
					"Subject": {
						"type": "string",
						"defaultValue": "Emp Data Logic App"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": {
						"value": "[parameters('DS_ADLS_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_EMP_Train')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adls_emp_train",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tar_Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"fileName": "[parameters('DS_ADLS_EMP_Train_properties_typeProperties_fileName')]",
					"folderPath": {
						"value": "[parameters('DS_ADLS_EMP_Train_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adls_emp_train')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_FileName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_File_Name')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"File_Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('DS_ADLS_File_Name_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('DS_ADLS_File_Name_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_From_To_DateTime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": {
						"value": "[parameters('DS_ADLS_From_To_DateTime_properties_typeProperties_folderPath')]",
						"type": "Expression"
					},
					"modifiedDatetimeStart": {
						"value": "@dataset().FromDateTime",
						"type": "Expression"
					},
					"modifiedDatetimeEnd": {
						"value": "@dataset().ToDateTime",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"File_Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": {
						"value": "[parameters('DS_BLOB_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('DS_BLOB_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FS_emp_train')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_fs_emp_train",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": {
						"value": "[parameters('DS_FS_emp_train_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_fs_emp_train')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FileShare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_File_Share",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					},
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": {
						"value": "[parameters('DS_FileShare_properties_typeProperties_folderPath')]",
						"type": "Expression"
					},
					"modifiedDatetimeStart": {
						"value": "@dataset().FromDateTime",
						"type": "Expression"
					},
					"modifiedDatetimeEnd": {
						"value": "@dataset().ToDateTime",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_File_Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FileShare_FileName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_File_Share",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FromDateTime": {
						"type": "string"
					},
					"ToDateTime": {
						"type": "string"
					},
					"FileNames": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"fileName": {
						"value": "[parameters('DS_FileShare_FileName_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('DS_FileShare_FileName_properties_typeProperties_folderPath')]",
						"type": "Expression"
					},
					"modifiedDatetimeStart": {
						"value": "@dataset().FromDateTime",
						"type": "Expression"
					},
					"modifiedDatetimeEnd": {
						"value": "@dataset().ToDateTime",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_File_Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_File_Share_File_Name')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_File_Share",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"File_Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().File_Name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().File_Path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_File_Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_ABC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_ABC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_ABC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DXC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_DXC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_DXC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TBD_Trigger_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_ADLS_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_ADLS_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_ADLS_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_ADLS_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_ADLS_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_ABC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_ABC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_DXC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_DXC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FS_Tran_EMP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_FS_Tran_EMP_properties_typeProperties_host')]",
					"userId": "[parameters('LS_FS_Tran_EMP_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_FS_Tran_EMP_password')]"
					}
				},
				"connectVia": {
					"referenceName": "FileShare",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_File_Share')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_File_Share_properties_typeProperties_host')]",
					"userId": "[parameters('LS_File_Share_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_File_Share_password')]"
					}
				},
				"connectVia": {
					"referenceName": "FileShare",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adls_emp_train')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('LS_adls_emp_train_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('LS_adls_emp_train_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('LS_adls_emp_train_servicePrincipalKey')]"
					},
					"tenant": "[parameters('LS_adls_emp_train_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('LS_adls_emp_train_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('LS_adls_emp_train_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_fs_emp_train')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LS_fs_emp_train_properties_typeProperties_host')]",
					"userId": "[parameters('LS_fs_emp_train_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_fs_emp_train_password')]"
					}
				},
				"connectVia": {
					"referenceName": "FileShare",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/FileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTOADLS')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Load_Multiple_Tables_To_ADLS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2019-05-29T08:56:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Load_Multiple_Tables_To_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_Based_BLOB_FILE_CREATE')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Trigger Test TBD",
							"type": "PipelineReference"
						},
						"parameters": {
							"Source_Container": "[parameters('trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_Source_Container')]",
							"Target_Container": "[parameters('trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_Target_Container')]",
							"File": "[parameters('trigger_Based_BLOB_FILE_CREATE_properties_Trigger Test TBD_parameters_File')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/t7dwsource/blobs/",
					"scope": "[parameters('trigger_Based_BLOB_FILE_CREATE_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Trigger Test TBD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileShare')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}